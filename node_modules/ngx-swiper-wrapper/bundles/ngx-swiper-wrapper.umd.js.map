{"version":3,"file":"ngx-swiper-wrapper.umd.js","sources":["../src/lib/swiper.interfaces.ts","../src/lib/swiper.directive.ts","../src/lib/swiper.component.ts","../src/lib/swiper.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const SWIPER_CONFIG = new InjectionToken<SwiperConfigInterface>('SWIPER_CONFIG');\n\nexport type SwiperEvent = 'init' | 'beforeDestroy' | 'scroll' | 'progress' | 'keyPress' |\n  'beforeResize' | 'afterResize' | 'resize' | 'breakpoint' | 'beforeResize' | 'sliderMove' |\n  'slideChange' | 'setTranslate' | 'setTransition' | 'fromEdge' | 'reachEnd' | 'reachBeginning' |\n  'autoplay' | 'autoplayStop' | 'autoplayStart' | 'imagesReady' | 'lazyImageLoad' |\n  'lazyImageReady' | 'scrollDragEnd' | 'scrollDragMove' | 'scrollDragStart' | 'swiperTap' |\n  'swiperClick' | 'swiperDoubleTap' | 'swiperTouchEnd' | 'swiperTouchMove' | 'swiperTouchStart' |\n  'swiperTouchMoveOpposite' | 'swiperTransitionEnd' | 'swiperTransitionStart' |\n  'slideNextTransitionEnd' | 'slideNextTransitionStart' | 'slidePrevTransitionEnd' |\n  'slidePrevTransitionStart' | 'slideChangeTransitionEnd' | 'slideChangeTransitionStart';\n\nexport const SwiperEvents: SwiperEvent[] = [\n  'init',\n  'beforeDestroy',\n\n  'scroll',\n  'progress',\n  'keyPress',\n\n  'beforeResize',\n  'afterResize',\n\n  'resize',\n  'breakpoint',\n  'beforeResize',\n\n  'sliderMove',\n  'slideChange',\n\n  'setTranslate',\n  'setTransition',\n\n  'fromEdge',\n  'reachEnd',\n  'reachBeginning',\n\n  'autoplay',\n  'autoplayStop',\n  'autoplayStart',\n\n  'imagesReady',\n  'lazyImageLoad',\n  'lazyImageReady',\n\n  'scrollDragEnd',\n  'scrollDragMove',\n  'scrollDragStart',\n\n  'swiperTap',\n  'swiperClick',\n  'swiperDoubleTap',\n  'swiperTouchEnd',\n  'swiperTouchMove',\n  'swiperTouchStart',\n  'swiperTouchMoveOpposite',\n  'swiperTransitionEnd',\n  'swiperTransitionStart',\n\n  'slideNextTransitionEnd',\n  'slideNextTransitionStart',\n  'slidePrevTransitionEnd',\n  'slidePrevTransitionStart',\n  'slideChangeTransitionEnd',\n  'slideChangeTransitionStart'\n];\n\nexport interface SwiperConfigInterface {\n  // Swiper parameters\n  init?: boolean,\n  initialSlide?: number,\n  direction?: string,\n  speed?: number,\n  setWrapperSize?: boolean,\n  virtualTranslate?: boolean,\n  width?: number,\n  height?: number,\n  autoHeight?: boolean,\n  roundLengths?: boolean,\n  nested?: boolean,\n  uniqueNavElements?: boolean,\n  effect?: string,\n  runCallbacksOnInit?: boolean,\n  watchOverflow?: boolean,\n\n  // Slides grid\n  spaceBetween?: number,\n  slidesPerView?: number | 'auto',\n  slidesPerColumn?: number,\n  slidesPerColumnFill?: string,\n  slidesPerGroup?: number,\n  centeredSlides?: boolean,\n  slidesOffsetBefore?: number,\n  slidesOffsetAfter?: number,\n  normalizeSlideIndex?: boolean,\n  centerInsufficientSlides?: boolean,\n\n  // Grab cursor\n  grabCursor?: boolean,\n\n  // Touches\n  touchEventsTarget?: string,\n  touchRatio?: number,\n  touchAngle?: number,\n  simulateTouch?: boolean,\n  shortSwipes?: boolean,\n  longSwipes?: boolean,\n  longSwipesRatio?: number,\n  longSwipesMs?: number,\n  followFinger?: boolean,\n  allowTouchMove?: boolean,\n  threshold?: number,\n  touchMoveStopPropagation?: boolean,\n  iOSEdgeSwipeDetection?: boolean,\n  iOSEdgeSwipeThreshold?: number,\n  touchReleaseOnEdges?: boolean,\n  passiveListeners?: boolean,\n\n  // Touch resistance\n  resistance?: boolean,\n  resistanceRatio?: number,\n\n  // Swiping / no swiping\n  preventInteractionOnTransition?: boolean,\n  allowSlidePrev?: boolean,\n  allowSlideNext?: boolean,\n  noSwiping?: boolean,\n  noSwipingClass?: string,\n  noSwipingSelector?: string,\n  swipeHandler?: string | HTMLElement,\n\n  // Clicks\n  preventClicks?: boolean,\n  preventClicksPropagation?: boolean,\n  slideToClickedSlide?: boolean,\n\n  // Freemode\n  freeMode?: boolean,\n  freeModeMomentum?: boolean,\n  freeModeMomentumRatio?: number,\n  freeModeMomentumVelocityRatio?: number,\n  freeModeMomentumBounce?: boolean,\n  freeModeMomentumBounceRatio?: number,\n  freeModeMinimumVelocity?: number,\n  freeModeSticky?: boolean,\n\n  // Progress\n  watchSlidesProgress?: boolean,\n  watchSlidesVisibility?: boolean,\n\n  // Images\n  preloadImages?: boolean,\n  updateOnImagesReady?: boolean,\n\n  // Loop\n  loop?: boolean,\n  loopAdditionalSlides?: number,\n  loopedSlides?: number,\n  loopFillGroupWithBlank?: boolean,\n\n  // Breakpoints\n  breakpoints?: SwiperBreakpointsInterface,\n  breakpointsInverse?: boolean,\n\n  // Observer\n  observer?: boolean,\n  observeParents?: boolean,\n\n  // Namespace\n  containerModifierClass?: string,\n  slideClass?: string,\n  slideActiveClass?: string,\n  slideDuplicatedActiveClass?: string,\n  slideVisibleClass?: string,\n  slideDuplicateClass?: string,\n  slideNextClass?: string,\n  slideDuplicatedNextClass?: string,\n  slidePrevClass?: string,\n  slideDuplicatedPrevClass?: string,\n  wrapperClass?: string,\n\n  // Effects\n  fadeEffect?: SwiperFadeEffectInterface,\n  flipEffect?: SwiperFlipEffectInterface,\n  cubeEffect?: SwiperCubeEffectInterface,\n  coverflowEffect?: SwiperCoverflowEffectInterface,\n\n  // Components\n  parallax?: boolean,\n\n  a11y?: boolean | SwiperA11YInterface,\n  lazy?: boolean | SwiperLazyInterface,\n  zoom?: boolean | SwiperZoomInterface,\n  thumbs?: boolean | SwiperThumbsInterface,\n  history?: boolean | SwiperHistoryInterface,\n  virtual?: boolean | SwiperVirtualInterface,\n  autoplay?: boolean | SwiperAutoplayInterface,\n  keyboard?: boolean | SwiperKeyboardInterface,\n  scrollbar?: boolean | SwiperScrollbarInterface,\n  mousewheel?: boolean | SwiperMousewheelInterface,\n  controller?: boolean | SwiperControllerInterface,\n  navigation?: boolean | SwiperNavigationInterface,\n  pagination?: boolean | SwiperPaginationInterface,\n  hashNavigation?: boolean | SwiperHashNavigationInterface\n}\n\nexport interface SwiperA11YInterface {\n  prevSlideMessage?: string,\n  nextSlideMessage?: string,\n  firstSlideMessage?: string,\n  lastSlideMessage?: string,\n  paginationBulletMessage?: string,\n  notificationClass?: string\n}\n\nexport interface SwiperLazyInterface {\n  loadPrevNext?: boolean,\n  loadPrevNextAmount?: number,\n  loadOnTransitionStart?: boolean,\n  elementClass?: string,\n  loadingClass?: string,\n  loadedClass?: string,\n  preloaderClass?: string\n}\n\nexport interface SwiperZoomInterface {\n  maxRatio?: number,\n  minRatio?: number,\n  toggle?: boolean,\n  containerClass?: string,\n  zoomedSlideClass?: string\n}\n\nexport interface SwiperThumbsInterface {\n  swiper?: any,\n  slideThumbActiveClass?: string,\n  thumbsContainerClass?: string\n}\n\nexport interface SwiperHistoryInterface {\n  replaceState?: boolean,\n  key?: string\n}\n\nexport interface SwiperVirtualInterface {\n  slides?: any[],\n  cache?: boolean,\n  addSliderBefore?: number,\n  addSliderAfter?: number,\n  renderSlide?: SwiperRenderSlideFunction,\n  renderExternal?: SwiperRenderExternalFunction\n}\n\nexport interface SwiperKeyboardInterface {\n  enabled?: boolean,\n  onlyInViewport?: boolean\n}\n\nexport interface SwiperAutoplayInterface {\n  delay?: number,\n  stopOnLastSlide?: boolean,\n  disableOnInteraction?: boolean,\n  reverseDirection?: boolean,\n  waitForTransition?: boolean\n}\n\nexport interface SwiperScrollbarInterface {\n  el?: string | HTMLElement,\n  hide?: boolean,\n  draggable?: boolean,\n  snapOnRelease?: boolean,\n  dragSize?: number | 'auto'\n}\n\nexport interface SwiperControllerInterface {\n  control?: any,\n  inverse?: boolean,\n  by?: 'slide' | 'container'\n}\n\nexport interface SwiperNavigationInterface {\n  nextEl?: string | HTMLElement,\n  prevEl?: string | HTMLElement,\n  hideOnClick?: boolean,\n  disabledClass?: string,\n  hiddenClass?: string\n}\n\nexport interface SwiperPaginationInterface {\n  el?: string | HTMLElement,\n  type?: 'bullets' | 'fraction' | 'progressbar' | 'custom',\n  bulletElement?: string,\n  dynamicBullets?: boolean,\n  dynamicMainBullets?: number,\n  hideOnClick?: boolean,\n  clickable?: boolean,\n  renderBullet?: SwiperRenderBulletFunction,\n  renderFraction?: SwiperRenderFractionFunction,\n  renderProgressbar?: SwiperRenderProgressbarFunction,\n  renderCustom?: SwiperRenderCustomFunction,\n  bulletClass?: string,\n  bulletActiveClass?: string,\n  modifierClass?: string,\n  currentClass?: string,\n  totalClass?: string,\n  hiddenClass?: string,\n  progressbarFillClass?: string,\n  clickableClass?: string\n}\n\nexport interface SwiperMousewheelInterface {\n  forceToAxis?: boolean,\n  releaseOnEdges?: boolean,\n  invert?: boolean,\n  sensitivity?: number,\n  eventsTarget?: string | HTMLElement\n}\n\nexport interface SwiperHashNavigationInterface {\n  watchState?: boolean,\n  replaceState?: boolean\n}\n\nexport interface SwiperFadeEffectInterface {\n  crossFade?: boolean\n}\n\nexport interface SwiperFlipEffectInterface {\n  limitRotation?: boolean,\n  slideShadows?: boolean\n}\n\nexport interface SwiperCubeEffectInterface {\n  shadow?: boolean,\n  shadowScale?: number,\n  shadowOffset?: number,\n  slideShadows?: boolean\n}\n\nexport interface SwiperCoverflowEffectInterface {\n  depth?: number,\n  rotate?: number,\n  stretch?: number,\n  modifier?: number,\n  slideShadows?: boolean\n}\n\nexport interface SwiperBreakpointsInterface {\n  [size: number]: SwiperConfigInterface\n}\n\nexport class SwiperConfig implements SwiperConfigInterface {\n  public on?: any;\n\n  // Swiper parameters\n  public init?: boolean;\n  public initialSlide?: number;\n  public direction?: string;\n  public speed?: number;\n  public setWrapperSize?: boolean;\n  public virtualTranslate?: boolean;\n  public width?: number;\n  public height?: number;\n  public autoHeight?: boolean;\n  public roundLengths?: boolean;\n  public nested?: boolean;\n  public uniqueNavElements?: boolean;\n  public effect?: string;\n  public runCallbacksOnInit?: boolean;\n  public watchOverflow?: boolean;\n\n  // Slides grid\n  public spaceBetween?: number;\n  public slidesPerView?: number | 'auto';\n  public slidesPerColumn?: number;\n  public slidesPerColumnFill?: string;\n  public slidesPerGroup?: number;\n  public centeredSlides?: boolean;\n  public slidesOffsetBefore?: number;\n  public slidesOffsetAfter?: number;\n  public normalizeSlideIndex?: boolean;\n  public centerInsufficientSlides?: boolean;\n\n  // Grab cursor\n  public grabCursor?: boolean;\n\n  // Touches\n  public touchEventsTarget?: string;\n  public touchRatio?: number;\n  public touchAngle?: number;\n  public simulateTouch?: boolean;\n  public shortSwipes?: boolean;\n  public longSwipes?: boolean;\n  public longSwipesRatio?: number;\n  public longSwipesMs?: number;\n  public followFinger?: boolean;\n  public allowTouchMove?: boolean;\n  public threshold?: number;\n  public touchMoveStopPropagation?: boolean;\n  public iOSEdgeSwipeDetection?: boolean;\n  public iOSEdgeSwipeThreshold?: number;\n  public touchReleaseOnEdges?: boolean;\n  public passiveListeners?: boolean;\n\n  // Touch resistance\n  public resistance?: boolean;\n  public resistanceRatio?: number;\n\n  // Swiping / no swiping\n  public preventInteractionOnTransition?: boolean;\n  public allowSlidePrev?: boolean;\n  public allowSlideNext?: boolean;\n  public noSwiping?: boolean;\n  public noSwipingClass?: string;\n  public noSwipingSelector?: string;\n  public swipeHandler?: string | HTMLElement;\n\n  // Clicks\n  public preventClicks?: boolean;\n  public preventClicksPropagation?: boolean;\n  public slideToClickedSlide?: boolean;\n\n  // Freemode\n  public freeMode?: boolean;\n  public freeModeMomentum?: boolean;\n  public freeModeMomentumRatio?: number;\n  public freeModeMomentumVelocityRatio?: number;\n  public freeModeMomentumBounce?: boolean;\n  public freeModeMomentumBounceRatio?: number;\n  public freeModeMinimumVelocity?: number;\n  public freeModeSticky?: boolean;\n\n  // Progress\n  public watchSlidesProgress?: boolean;\n  public watchSlidesVisibility?: boolean;\n\n  // Images\n  public preloadImages?: boolean;\n  public updateOnImagesReady?: boolean;\n\n  // Loop\n  public loop?: boolean;\n  public loopAdditionalSlides?: number;\n  public loopedSlides?: number;\n  public loopFillGroupWithBlank?: boolean;\n\n  // Breakpoints\n  public breakpoints?: any;\n  public breakpointsInverse?: boolean;\n\n  // Observer\n  public observer?: boolean;\n  public observeParents?: boolean;\n\n  // Namespace\n  public containerModifierClass?: string;\n  public slideClass?: string;\n  public slideActiveClass?: string;\n  public slideDuplicatedActiveClass?: string;\n  public slideVisibleClass?: string;\n  public slideDuplicateClass?: string;\n  public slideNextClass?: string;\n  public slideDuplicatedNextClass?: string;\n  public slidePrevClass?: string;\n  public slideDuplicatedPrevClass?: string;\n  public wrapperClass?: string;\n\n  // Effects\n  public fadeEffect?: any;\n  public flipEffect?: any;\n  public cubeEffect?: any;\n  public coverflowEffect?: any;\n\n  // Components\n  public parallax?: boolean;\n\n  public a11y?: boolean | any;\n  public lazy?: boolean | any;\n  public zoom?: boolean | any;\n  public history?: boolean | any;\n  public virtual?: boolean | any;\n  public autoplay?: boolean | any;\n  public keyboard?: boolean | any;\n  public scrollbar?: boolean | any;\n  public mousewheel?: boolean | any;\n  public controller?: boolean | any;\n  public navigation?: boolean | any;\n  public pagination?: boolean | any;\n  public hashNavigation?: boolean | any;\n\n  constructor(config: SwiperConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: SwiperConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] != null && !Array.isArray(config[key]) && typeof config[key] === 'object' &&\n         (typeof HTMLElement === 'undefined' || !(config[key] instanceof HTMLElement)))\n      {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n\nexport type SwiperRenderSlideFunction = (slide: any, index: number) => HTMLElement;\nexport type SwiperRenderExternalFunction = (data: any) => void;\n\nexport type SwiperRenderCustomFunction = (swiper: any, current: number, total: number) => string;\n\nexport type SwiperRenderBulletFunction = (index: number, className: string) => string;\nexport type SwiperRenderFractionFunction = (currentClass: string, totalClass: string) => string;\nexport type SwiperRenderProgressbarFunction = (progressbarClass: string) => string;\n","import * as Swiper from 'swiper/dist/js/swiper.js';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Directive,\n  AfterViewInit, OnDestroy, DoCheck, OnChanges, Input, Output, EventEmitter,\n  SimpleChanges, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\n\nimport { SWIPER_CONFIG, SwiperConfig, SwiperConfigInterface,\n  SwiperEvent, SwiperEvents } from './swiper.interfaces';\n\n@Directive({\n  selector: '[swiper]',\n  exportAs: 'ngxSwiper'\n})\nexport class SwiperDirective implements AfterViewInit, OnDestroy, DoCheck, OnChanges {\n  private instance: any;\n\n  private initialIndex: number | null = null;\n\n  private configDiff: KeyValueDiffer<string, any> | null = null;\n\n  @Input()\n  set index(index: number) {\n    if (index != null) {\n      this.setIndex(index);\n    }\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Input() performance: boolean = false;\n\n  @Input('swiper') config?: SwiperConfigInterface;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object, private zone: NgZone,\n    private elementRef: ElementRef, private differs: KeyValueDiffers,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngAfterViewInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const params = new SwiperConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    if (params.scrollbar === true) {\n      params.scrollbar = {\n        el: '.swiper-scrollbar'\n      };\n    }\n\n    if (params.pagination === true) {\n      params.pagination = {\n        el: '.swiper-pagination'\n      };\n    }\n\n    if (params.navigation === true) {\n      params.navigation = {\n        prevEl: '.swiper-button-prev',\n        nextEl: '.swiper-button-next'\n      };\n    }\n\n    if (this.disabled) {\n      params.allowSlidePrev = false;\n      params.allowSlideNext = false;\n    }\n\n    if (this.initialIndex != null) {\n      params.initialSlide = this.initialIndex;\n\n      this.initialIndex = null;\n    }\n\n    params.on = {\n      slideChange: () => {\n        if (this.instance && this.indexChange.observers.length) {\n          this.emit(this.indexChange, this.instance.realIndex);\n        }\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = new Swiper(this.elementRef.nativeElement, params);\n    });\n\n    if (params.init !== false && this.S_INIT.observers.length) {\n      this.emit(this.S_INIT, this.instance);\n    }\n\n    // Add native Swiper event handling\n    SwiperEvents.forEach((eventName: SwiperEvent) => {\n      let swiperEvent = eventName.replace('swiper', '');\n\n      swiperEvent = swiperEvent.charAt(0).toLowerCase() + swiperEvent.slice(1);\n\n      this.instance.on(swiperEvent, (...args: any[]) => {\n        if (args.length === 1) {\n          args = args[0];\n        }\n\n        const output = `S_${swiperEvent.toUpperCase()}`;\n\n        const emitter = this[output as keyof SwiperDirective] as EventEmitter<any>;\n\n        if (emitter.observers.length) {\n          this.emit(emitter, args);\n        }\n      });\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.destroy(true, this.instance.initialized || false);\n      });\n\n      this.instance = null;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes) {\n        this.initialIndex = this.getIndex(true);\n\n        this.ngOnDestroy();\n\n        this.ngAfterViewInit();\n\n        this.update();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.instance && changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        if (changes['disabled'].currentValue === true) {\n          this.zone.runOutsideAngular(() => {\n            this.ngOnDestroy();\n\n            this.ngAfterViewInit();\n          });\n        } else if (changes['disabled'].currentValue === false) {\n          this.zone.runOutsideAngular(() => {\n            this.ngOnDestroy();\n\n            this.ngAfterViewInit();\n          });\n        }\n      }\n    }\n  }\n\n  private emit(emitter: EventEmitter<any>, value: any): void {\n    if (this.performance) {\n      emitter.emit(value);\n    } else {\n      this.zone.run(() => emitter.emit(value));\n    }\n  }\n\n  public swiper(): any {\n    return this.instance;\n  }\n\n  public init(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.init();\n      });\n    }\n  }\n\n  public update(): void {\n    setTimeout(() => {\n      if (this.instance) {\n        this.zone.runOutsideAngular(() => {\n          this.instance.update();\n        });\n      }\n    }, 0);\n  }\n\n  public getIndex(real?: boolean): number {\n    if (!this.instance) {\n      return this.initialIndex || 0;\n    } else {\n      return real ? this.instance.realIndex : this.instance.activeIndex;\n    }\n  }\n\n  public setIndex(index: number, speed?: number, silent?: boolean): void {\n    if (!this.instance) {\n      this.initialIndex = index;\n    } else {\n      let realIndex = index * this.instance.params.slidesPerGroup;\n\n      if (this.instance.params.loop) {\n        realIndex += this.instance.loopedSlides;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideTo(realIndex, speed, !silent);\n      });\n    }\n  }\n\n  public prevSlide(speed?: number, silent?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slidePrev(speed, !silent);\n      });\n    }\n  }\n\n  public nextSlide(speed?: number, silent?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideNext(speed, !silent);\n      });\n    }\n  }\n\n  public stopAutoplay(reset?: boolean): void {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.stop();\n      });\n    }\n  }\n\n  public startAutoplay(reset?: boolean): void {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.start();\n      });\n    }\n  }\n}\n","import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Component,\n  AfterViewInit, OnDestroy, Input, Output, EventEmitter,\n  ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\n\nimport { SwiperDirective } from './swiper.directive';\n\nimport { SWIPER_CONFIG, SwiperConfig, SwiperConfigInterface,\n  SwiperEvent, SwiperEvents } from './swiper.interfaces';\n\n@Component({\n  selector: 'swiper',\n  exportAs: 'ngxSwiper',\n  templateUrl: '../../dist/lib/swiper.component.html',\n  styleUrls: [\n    '../../dist/lib/swiper.component.css',\n    '../../node_modules/swiper/dist/css/swiper.min.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SwiperComponent implements AfterViewInit, OnDestroy {\n  private mo: MutationObserver | null = null;\n\n  public swiperConfig: any = null;\n  public paginationBackup: any = null;\n  public paginationConfig: any = null;\n\n  @Input() index: number | null = null;\n\n  @Input() disabled: boolean = false;\n\n  @Input() performance: boolean = false;\n\n  @Input() config?: SwiperConfigInterface;\n\n  @Input() useSwiperClass: boolean = true;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @ViewChild('swiperSlides') swiperSlides?: ElementRef;\n\n  @ViewChild(SwiperDirective) directiveRef?: SwiperDirective;\n\n  get isAtLast(): boolean {\n    return (!this.directiveRef || !this.directiveRef.swiper()) ?\n      false : this.directiveRef.swiper()['isEnd'];\n  }\n\n  get isAtFirst(): boolean {\n    return (!this.directiveRef || !this.directiveRef.swiper()) ?\n      false : this.directiveRef.swiper()['isBeginning'];\n  }\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngAfterViewInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    this.zone.runOutsideAngular(() => {\n      this.updateClasses();\n\n      if (this.swiperSlides && typeof MutationObserver !== 'undefined') {\n        this.mo = new MutationObserver(() => {\n          this.updateClasses();\n        });\n\n        this.mo.observe(this.swiperSlides.nativeElement, { childList: true });\n      }\n    });\n\n    window.setTimeout(() => {\n      if (this.directiveRef) {\n        this.S_INIT.emit();\n\n        this.directiveRef.indexChange = this.indexChange;\n\n        SwiperEvents.forEach((eventName: SwiperEvent) => {\n          if (this.directiveRef) {\n            const output = `S_${eventName.replace('swiper', '').toUpperCase()}`;\n\n            const directiveOutput = output as keyof SwiperDirective;\n            const componentOutput = output as keyof SwiperComponent;\n\n            this.directiveRef[directiveOutput] = this[componentOutput] as EventEmitter<any>;\n          }\n        });\n      }\n    }, 0);\n  }\n\n  ngOnDestroy(): void {\n    if (this.mo) {\n      this.mo.disconnect();\n    }\n\n    if (this.config && this.paginationBackup) {\n      this.config.pagination = this.paginationBackup;\n    }\n  }\n\n  public getConfig(): SwiperConfigInterface {\n    this.swiperConfig = new SwiperConfig(this.defaults);\n\n    this.swiperConfig.assign(this.config); // Custom configuration\n\n    if (this.swiperConfig.pagination === true ||\n       (this.swiperConfig.pagination && typeof this.swiperConfig.pagination === 'object' &&\n       (!this.swiperConfig.pagination.type || this.swiperConfig.pagination.type === 'bullets') &&\n       !this.swiperConfig.pagination.renderBullet && this.swiperConfig.pagination.el === '.swiper-pagination'))\n    {\n      this.config = this.config || {};\n\n      if (!this.paginationConfig) {\n        this.paginationBackup = this.config.pagination;\n\n        this.paginationConfig = {\n          el: '.swiper-pagination',\n\n          renderBullet: (index: number, className: string) => {\n            const children = this.swiperSlides ? this.swiperSlides.nativeElement.children : [];\n\n            let bullet = `<span class=\"${className} ${className}-middle\" index=\"${index}\"></span>`;\n\n            if (index === 0) {\n              bullet = `<span class=\"${className} ${className}-first\" index=\"${index}\"></span>`;\n            } else if (index === (children.length - 1)) {\n              bullet = `<span class=\"${className} ${className}-last\" index=\"${index}\"></span>`;\n            }\n\n            return `<span class=\"swiper-pagination-handle\" index=\"${index}\">${bullet}</span>`;\n          }\n        };\n      }\n\n      if (this.swiperConfig.pagination === true) {\n        this.config.pagination = this.paginationConfig;\n      } else {\n        this.config.pagination = Object.assign({} , this.config.pagination, this.paginationConfig);\n      }\n    }\n\n    return this.config as SwiperConfigInterface;\n  }\n\n  private updateClasses(): void {\n    if (this.swiperSlides) {\n      let updateNeeded = false;\n\n      const children = this.swiperSlides.nativeElement.children;\n\n      for (let i = 0; i < children.length; i++) {\n        if (!children[i].classList.contains('swiper-slide')) {\n          updateNeeded = true;\n\n          children[i].classList.add('swiper-slide');\n        }\n      }\n\n      if (updateNeeded && this.directiveRef) {\n        this.directiveRef.update();\n      }\n    }\n\n    this.cdRef.detectChanges();\n  }\n\n  public onPaginationClick(index: number): void {\n    if (this.config && this.directiveRef && (this.config.pagination === true ||\n       (this.config.pagination && typeof this.config.pagination === 'object' &&\n       (!this.config.pagination.type || this.config.pagination.type === 'bullets') &&\n       (this.config.pagination.clickable && this.config.pagination.el === '.swiper-pagination'))))\n    {\n      this.directiveRef.setIndex(index);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { SwiperComponent } from './swiper.component';\nimport { SwiperDirective } from './swiper.directive';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ SwiperComponent, SwiperDirective ],\n  exports: [ CommonModule, SwiperComponent, SwiperDirective ]\n})\nexport class SwiperModule {\n}\n"],"names":["InjectionToken","EventEmitter","isPlatformBrowser","Directive","Inject","PLATFORM_ID","NgZone","ElementRef","KeyValueDiffers","Optional","Input","Output","Component","ViewEncapsulation","ChangeDetectorRef","ViewChild","NgModule","CommonModule"],"mappings":";;;;;;;;;;IAAA;AAEA,QAAa,aAAa,GAAG,IAAIA,mBAAc,CAAwB,eAAe,CAAC;;IAYvF,IAAa,YAAY,GAAkB;QACzC,MAAM;QACN,eAAe;QAEf,QAAQ;QACR,UAAU;QACV,UAAU;QAEV,cAAc;QACd,aAAa;QAEb,QAAQ;QACR,YAAY;QACZ,cAAc;QAEd,YAAY;QACZ,aAAa;QAEb,cAAc;QACd,eAAe;QAEf,UAAU;QACV,UAAU;QACV,gBAAgB;QAEhB,UAAU;QACV,cAAc;QACd,eAAe;QAEf,aAAa;QACb,eAAe;QACf,gBAAgB;QAEhB,eAAe;QACf,gBAAgB;QAChB,iBAAiB;QAEjB,WAAW;QACX,aAAa;QACb,iBAAiB;QACjB,gBAAgB;QAChB,iBAAiB;QACjB,kBAAkB;QAClB,yBAAyB;QACzB,qBAAqB;QACrB,uBAAuB;QAEvB,wBAAwB;QACxB,0BAA0B;QAC1B,wBAAwB;QACxB,0BAA0B;QAC1B,0BAA0B;QAC1B,4BAA4B;KAC7B;;QAyaC,sBAAY,MAAkC;YAAlC,uBAAA,EAAA,WAAkC;YAC5C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrB;;;;;;QAED,6BAAM;;;;;QAAN,UAAO,MAAwC,EAAE,MAAY;YAAtD,uBAAA,EAAA,WAAwC;YAC7C,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;YAExB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;gBACxB,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ;qBACrF,OAAO,WAAW,KAAK,WAAW,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,YAAY,WAAW,CAAC,CAAC,EAChF;oBACE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;oBAEjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;iBACvC;qBAAM;oBACL,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;iBAC3B;aACF;SACF;QACH,mBAAC;KAAA;;;;;;AC/fD;QAuFE,yBAAyC,UAAkB,EAAU,IAAY,EACvE,UAAsB,EAAU,OAAwB,EACrB,QAA+B;YAFnC,eAAU,GAAV,UAAU,CAAQ;YAAU,SAAI,GAAJ,IAAI,CAAQ;YACvE,eAAU,GAAV,UAAU,CAAY;YAAU,YAAO,GAAP,OAAO,CAAiB;YACrB,aAAQ,GAAR,QAAQ,CAAuB;YAvEpE,iBAAY,GAAkB,IAAI,CAAC;YAEnC,eAAU,GAAuC,IAAI,CAAC;YASrD,aAAQ,GAAY,KAAK,CAAC;YAE1B,gBAAW,GAAY,KAAK,CAAC;YAI5B,gBAAW,GAAG,IAAIC,iBAAY,EAAU,CAAC;YAEZ,WAAM,GAA6B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,aAAQ,GAA2B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,aAAQ,GAA2B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iBAAY,GAAuB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,mBAAc,GAAqB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iBAAY,GAAuB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,mBAAc,GAAqB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,qBAAgB,GAAmB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,mBAAc,GAAqB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,qBAAgB,GAAmB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,qBAAgB,GAAmB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,sBAAiB,GAAkB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,UAAK,GAA8B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,YAAO,GAA4B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,gBAAW,GAAwB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,gBAAW,GAAwB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iBAAY,GAAuB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,wBAAmB,GAAgB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,sBAAiB,GAAkB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,6BAAwB,GAAW,IAAIA,iBAAY,EAAO,CAAC;YAC3D,+BAA0B,GAAS,IAAIA,iBAAY,EAAO,CAAC;YAC3D,6BAAwB,GAAW,IAAIA,iBAAY,EAAO,CAAC;YAC3D,+BAA0B,GAAS,IAAIA,iBAAY,EAAO,CAAC;YAC3D,+BAA0B,GAAS,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iCAA4B,GAAO,IAAIA,iBAAY,EAAO,CAAC;SAIlB;QAnEhF,sBACI,kCAAK;;;;;YADT,UACU,KAAa;gBACrB,IAAI,KAAK,IAAI,IAAI,EAAE;oBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBACtB;aACF;;;WAAA;;;;QAgED,yCAAe;;;QAAf;YAAA,iBAiFC;YAhFC,IAAI,CAACC,wBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACvC,OAAO;aACR;;gBAEK,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC;YAE9C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE3B,IAAI,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;gBAC7B,MAAM,CAAC,SAAS,GAAG;oBACjB,EAAE,EAAE,mBAAmB;iBACxB,CAAC;aACH;YAED,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC9B,MAAM,CAAC,UAAU,GAAG;oBAClB,EAAE,EAAE,oBAAoB;iBACzB,CAAC;aACH;YAED,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC9B,MAAM,CAAC,UAAU,GAAG;oBAClB,MAAM,EAAE,qBAAqB;oBAC7B,MAAM,EAAE,qBAAqB;iBAC9B,CAAC;aACH;YAED,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC9B,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;aAC/B;YAED,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,EAAE;gBAC7B,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBAExC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;aAC1B;YAED,MAAM,CAAC,EAAE,GAAG;gBACV,WAAW,EAAE;oBACX,IAAI,KAAI,CAAC,QAAQ,IAAI,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE;wBACtD,KAAI,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;qBACtD;iBACF;aACF,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC1B,KAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;aACnE,CAAC,CAAC;YAEH,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACvC;;YAGD,YAAY,CAAC,OAAO,CAAC,UAAC,SAAsB;;oBACtC,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;gBAEjD,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEzE,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE;oBAAC,cAAc;yBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;wBAAd,yBAAc;;oBAC3C,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;wBACrB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;qBAChB;;wBAEK,MAAM,GAAG,OAAK,WAAW,CAAC,WAAW,EAAI;;wBAEzC,OAAO,sBAAG,KAAI,oBAAC,MAAM,GAA0B,EAAqB;oBAE1E,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE;wBAC5B,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBAC1B;iBACF,CAAC,CAAC;aACJ,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;gBAEhE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;aACzC;SACF;;;;QAED,qCAAW;;;QAAX;YAAA,iBAQC;YAPC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC;iBACjE,CAAC,CAAC;gBAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;;;;QAED,mCAAS;;;QAAT;YACE,IAAI,IAAI,CAAC,UAAU,EAAE;;oBACb,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAEvD,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAExC,IAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,IAAI,CAAC,eAAe,EAAE,CAAC;oBAEvB,IAAI,CAAC,MAAM,EAAE,CAAC;iBACf;aACF;SACF;;;;;QAED,qCAAW;;;;QAAX,UAAY,OAAsB;YAAlC,iBAkBC;YAjBC,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;gBACxC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,KAAK,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE;oBAC1E,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,KAAK,IAAI,EAAE;wBAC7C,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;4BAC1B,KAAI,CAAC,WAAW,EAAE,CAAC;4BAEnB,KAAI,CAAC,eAAe,EAAE,CAAC;yBACxB,CAAC,CAAC;qBACJ;yBAAM,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,KAAK,KAAK,EAAE;wBACrD,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;4BAC1B,KAAI,CAAC,WAAW,EAAE,CAAC;4BAEnB,KAAI,CAAC,eAAe,EAAE,CAAC;yBACxB,CAAC,CAAC;qBACJ;iBACF;aACF;SACF;;;;;;;QAEO,8BAAI;;;;;;QAAZ,UAAa,OAA0B,EAAE,KAAU;YACjD,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC;aAC1C;SACF;;;;QAEM,gCAAM;;;QAAb;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;;;;QAEM,8BAAI;;;QAAX;YAAA,iBAMC;YALC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACtB,CAAC,CAAC;aACJ;SACF;;;;QAEM,gCAAM;;;QAAb;YAAA,iBAQC;YAPC,UAAU,CAAC;gBACT,IAAI,KAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;wBAC1B,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;qBACxB,CAAC,CAAC;iBACJ;aACF,EAAE,CAAC,CAAC,CAAC;SACP;;;;;QAEM,kCAAQ;;;;QAAf,UAAgB,IAAc;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC;aAC/B;iBAAM;gBACL,OAAO,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;aACnE;SACF;;;;;;;QAEM,kCAAQ;;;;;;QAAf,UAAgB,KAAa,EAAE,KAAc,EAAE,MAAgB;YAA/D,iBAcC;YAbC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC3B;iBAAM;;oBACD,WAAS,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc;gBAE3D,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE;oBAC7B,WAAS,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;iBACzC;gBAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAS,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC;iBAClD,CAAC,CAAC;aACJ;SACF;;;;;;QAEM,mCAAS;;;;;QAAhB,UAAiB,KAAc,EAAE,MAAgB;YAAjD,iBAMC;YALC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC;iBACzC,CAAC,CAAC;aACJ;SACF;;;;;;QAEM,mCAAS;;;;;QAAhB,UAAiB,KAAc,EAAE,MAAgB;YAAjD,iBAMC;YALC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC;iBACzC,CAAC,CAAC;aACJ;SACF;;;;;QAEM,sCAAY;;;;QAAnB,UAAoB,KAAe;YAAnC,iBAUC;YATC,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClB;YAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAC3C,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBAC/B,CAAC,CAAC;aACJ;SACF;;;;;QAEM,uCAAa;;;;QAApB,UAAqB,KAAe;YAApC,iBAUC;YATC,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;aAClB;YAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAC3C,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC1B,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;iBAChC,CAAC,CAAC;aACJ;SACF;;oBA7SFC,cAAS,SAAC;wBACT,QAAQ,EAAE,UAAU;wBACpB,QAAQ,EAAE,WAAW;qBACtB;;;;oBAyEsD,MAAM,uBAA9CC,WAAM,SAACC,gBAAW;oBAnFxBC,WAAM;oBAAoBC,eAAU;oBAEZC,oBAAe;oDAmF3CC,aAAQ,YAAIL,WAAM,SAAC,aAAa;;;4BAnElCM,UAAK;+BAOLA,UAAK;kCAELA,UAAK;6BAELA,UAAK,SAAC,QAAQ;kCAEdC,WAAM;6BAENA,WAAM,SAAC,MAAM;sCACbA,WAAM,SAAC,eAAe;+BAEtBA,WAAM,SAAC,QAAQ;iCACfA,WAAM,SAAC,UAAU;+BAEjBA,WAAM,SAAC,QAAQ;mCACfA,WAAM,SAAC,YAAY;qCACnBA,WAAM,SAAC,cAAc;iCAErBA,WAAM,SAAC,UAAU;mCACjBA,WAAM,SAAC,YAAY;oCACnBA,WAAM,SAAC,aAAa;qCAEpBA,WAAM,SAAC,cAAc;sCACrBA,WAAM,SAAC,eAAe;iCAEtBA,WAAM,SAAC,UAAU;iCACjBA,WAAM,SAAC,UAAU;uCACjBA,WAAM,SAAC,gBAAgB;iCAEvBA,WAAM,SAAC,UAAU;sCACjBA,WAAM,SAAC,eAAe;qCACtBA,WAAM,SAAC,cAAc;oCAErBA,WAAM,SAAC,aAAa;sCACpBA,WAAM,SAAC,eAAe;uCACtBA,WAAM,SAAC,gBAAgB;sCAEvBA,WAAM,SAAC,eAAe;uCACtBA,WAAM,SAAC,gBAAgB;wCACvBA,WAAM,SAAC,iBAAiB;4BAExBA,WAAM,SAAC,WAAW;8BAClBA,WAAM,SAAC,aAAa;kCACpBA,WAAM,SAAC,iBAAiB;iCACxBA,WAAM,SAAC,gBAAgB;kCACvBA,WAAM,SAAC,iBAAiB;mCACxBA,WAAM,SAAC,kBAAkB;0CACzBA,WAAM,SAAC,yBAAyB;sCAChCA,WAAM,SAAC,qBAAqB;wCAC5BA,WAAM,SAAC,uBAAuB;+CAE9BA,WAAM,SAAC,wBAAwB;iDAC/BA,WAAM,SAAC,0BAA0B;+CACjCA,WAAM,SAAC,wBAAwB;iDAC/BA,WAAM,SAAC,0BAA0B;iDACjCA,WAAM,SAAC,0BAA0B;mDACjCA,WAAM,SAAC,4BAA4B;;QAoOtC,sBAAC;KA9SD;;;;;;ACXA;QAwGE,yBAAoB,IAAY,EAAU,KAAwB,EACnC,UAAkB,EACJ,QAA+B;YAFxD,SAAI,GAAJ,IAAI,CAAQ;YAAU,UAAK,GAAL,KAAK,CAAmB;YACnC,eAAU,GAAV,UAAU,CAAQ;YACJ,aAAQ,GAAR,QAAQ,CAAuB;YApFpE,OAAE,GAA4B,IAAI,CAAC;YAEpC,iBAAY,GAAQ,IAAI,CAAC;YACzB,qBAAgB,GAAQ,IAAI,CAAC;YAC7B,qBAAgB,GAAQ,IAAI,CAAC;YAE3B,UAAK,GAAkB,IAAI,CAAC;YAE5B,aAAQ,GAAY,KAAK,CAAC;YAE1B,gBAAW,GAAY,KAAK,CAAC;YAI7B,mBAAc,GAAY,IAAI,CAAC;YAE9B,gBAAW,GAAG,IAAIV,iBAAY,EAAU,CAAC;YAgBZ,WAAM,GAA6B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,aAAQ,GAA2B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,aAAQ,GAA2B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iBAAY,GAAuB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,mBAAc,GAAqB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iBAAY,GAAuB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,mBAAc,GAAqB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,qBAAgB,GAAmB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,mBAAc,GAAqB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,qBAAgB,GAAmB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,qBAAgB,GAAmB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,sBAAiB,GAAkB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,UAAK,GAA8B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,YAAO,GAA4B,IAAIA,iBAAY,EAAO,CAAC;YAC3D,gBAAW,GAAwB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,eAAU,GAAyB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,gBAAW,GAAwB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iBAAY,GAAuB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,wBAAmB,GAAgB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAoB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,sBAAiB,GAAkB,IAAIA,iBAAY,EAAO,CAAC;YAE3D,6BAAwB,GAAW,IAAIA,iBAAY,EAAO,CAAC;YAC3D,+BAA0B,GAAS,IAAIA,iBAAY,EAAO,CAAC;YAC3D,6BAAwB,GAAW,IAAIA,iBAAY,EAAO,CAAC;YAC3D,+BAA0B,GAAS,IAAIA,iBAAY,EAAO,CAAC;YAC3D,+BAA0B,GAAS,IAAIA,iBAAY,EAAO,CAAC;YAC3D,iCAA4B,GAAO,IAAIA,iBAAY,EAAO,CAAC;SAIlB;QA9DhF,sBAAI,qCAAQ;;;;YAAZ;gBACE,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;oBACvD,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC;aAC/C;;;WAAA;QAED,sBAAI,sCAAS;;;;YAAb;gBACE,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;oBACvD,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,CAAC;aACrD;;;WAAA;;;;QAwDD,yCAAe;;;QAAf;YAAA,iBAmCC;YAlCC,IAAI,CAACC,wBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACvC,OAAO;aACR;YAED,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC1B,KAAI,CAAC,aAAa,EAAE,CAAC;gBAErB,IAAI,KAAI,CAAC,YAAY,IAAI,OAAO,gBAAgB,KAAK,WAAW,EAAE;oBAChE,KAAI,CAAC,EAAE,GAAG,IAAI,gBAAgB,CAAC;wBAC7B,KAAI,CAAC,aAAa,EAAE,CAAC;qBACtB,CAAC,CAAC;oBAEH,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;iBACvE;aACF,CAAC,CAAC;YAEH,MAAM,CAAC,UAAU,CAAC;gBAChB,IAAI,KAAI,CAAC,YAAY,EAAE;oBACrB,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;oBAEnB,KAAI,CAAC,YAAY,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC;oBAEjD,YAAY,CAAC,OAAO,CAAC,UAAC,SAAsB;wBAC1C,IAAI,KAAI,CAAC,YAAY,EAAE;;gCACf,MAAM,GAAG,OAAK,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,WAAW,EAAI;;gCAE7D,eAAe,sBAAG,MAAM,EAAyB;;gCACjD,eAAe,sBAAG,MAAM,EAAyB;4BAEvD,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,sBAAG,KAAI,CAAC,eAAe,CAAC,EAAqB,CAAC;yBACjF;qBACF,CAAC,CAAC;iBACJ;aACF,EAAE,CAAC,CAAC,CAAC;SACP;;;;QAED,qCAAW;;;QAAX;YACE,IAAI,IAAI,CAAC,EAAE,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;aACtB;YAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACxC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;aAChD;SACF;;;;QAEM,mCAAS;;;QAAhB;YAAA,iBA0CC;YAzCC,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEpD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEtC,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,KAAK,IAAI;iBACrC,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,KAAK,QAAQ;qBAChF,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,KAAK,SAAS,CAAC;oBACvF,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,KAAK,oBAAoB,CAAC,EAC1G;gBACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAEhC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;oBAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBAE/C,IAAI,CAAC,gBAAgB,GAAG;wBACtB,EAAE,EAAE,oBAAoB;wBAExB,YAAY,EAAE,UAAC,KAAa,EAAE,SAAiB;;gCACvC,QAAQ,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE;;gCAE9E,MAAM,GAAG,mBAAgB,SAAS,SAAI,SAAS,0BAAmB,KAAK,eAAW;4BAEtF,IAAI,KAAK,KAAK,CAAC,EAAE;gCACf,MAAM,GAAG,mBAAgB,SAAS,SAAI,SAAS,yBAAkB,KAAK,eAAW,CAAC;6BACnF;iCAAM,IAAI,KAAK,MAAM,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;gCAC1C,MAAM,GAAG,mBAAgB,SAAS,SAAI,SAAS,wBAAiB,KAAK,eAAW,CAAC;6BAClF;4BAED,OAAO,sDAAiD,KAAK,WAAK,MAAM,YAAS,CAAC;yBACnF;qBACF,CAAC;iBACH;gBAED,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,KAAK,IAAI,EAAE;oBACzC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;iBAChD;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBAC5F;aACF;YAED,0BAAO,IAAI,CAAC,MAAM,GAA0B;SAC7C;;;;;QAEO,uCAAa;;;;QAArB;YACE,IAAI,IAAI,CAAC,YAAY,EAAE;;oBACjB,YAAY,GAAG,KAAK;;oBAElB,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ;gBAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;wBACnD,YAAY,GAAG,IAAI,CAAC;wBAEpB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;qBAC3C;iBACF;gBAED,IAAI,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;oBACrC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC5B;aACF;YAED,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;SAC5B;;;;;QAEM,2CAAiB;;;;QAAxB,UAAyB,KAAa;YACpC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,IAAI;iBACpE,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,KAAK,QAAQ;qBACpE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,KAAK,SAAS,CAAC;qBAC1E,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,KAAK,oBAAoB,CAAC,CAAC,CAAC,EAC7F;gBACE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACnC;SACF;;oBA1NFU,cAAS,SAAC;wBACT,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,WAAW;wBACrB,+3CAAmD;wBAKnD,aAAa,EAAEC,sBAAiB,CAAC,IAAI;;qBACtC;;;;oBAlBQP,WAAM;oBAEiBQ,sBAAiB;oBAqGJ,MAAM,uBAA9CV,WAAM,SAACC,gBAAW;oDAClBI,aAAQ,YAAIL,WAAM,SAAC,aAAa;;;4BA9ElCM,UAAK;+BAELA,UAAK;kCAELA,UAAK;6BAELA,UAAK;qCAELA,UAAK;kCAELC,WAAM;mCAENI,cAAS,SAAC,cAAc;mCAExBA,cAAS,SAAC,eAAe;6BAYzBJ,WAAM,SAAC,MAAM;sCACbA,WAAM,SAAC,eAAe;+BAEtBA,WAAM,SAAC,QAAQ;iCACfA,WAAM,SAAC,UAAU;+BAEjBA,WAAM,SAAC,QAAQ;mCACfA,WAAM,SAAC,YAAY;qCACnBA,WAAM,SAAC,cAAc;iCAErBA,WAAM,SAAC,UAAU;mCACjBA,WAAM,SAAC,YAAY;oCACnBA,WAAM,SAAC,aAAa;qCAEpBA,WAAM,SAAC,cAAc;sCACrBA,WAAM,SAAC,eAAe;iCAEtBA,WAAM,SAAC,UAAU;iCACjBA,WAAM,SAAC,UAAU;uCACjBA,WAAM,SAAC,gBAAgB;iCAEvBA,WAAM,SAAC,UAAU;sCACjBA,WAAM,SAAC,eAAe;qCACtBA,WAAM,SAAC,cAAc;oCAErBA,WAAM,SAAC,aAAa;sCACpBA,WAAM,SAAC,eAAe;uCACtBA,WAAM,SAAC,gBAAgB;sCAEvBA,WAAM,SAAC,eAAe;uCACtBA,WAAM,SAAC,gBAAgB;wCACvBA,WAAM,SAAC,iBAAiB;4BAExBA,WAAM,SAAC,WAAW;8BAClBA,WAAM,SAAC,aAAa;kCACpBA,WAAM,SAAC,iBAAiB;iCACxBA,WAAM,SAAC,gBAAgB;kCACvBA,WAAM,SAAC,iBAAiB;mCACxBA,WAAM,SAAC,kBAAkB;0CACzBA,WAAM,SAAC,yBAAyB;sCAChCA,WAAM,SAAC,qBAAqB;wCAC5BA,WAAM,SAAC,uBAAuB;+CAE9BA,WAAM,SAAC,wBAAwB;iDAC/BA,WAAM,SAAC,0BAA0B;+CACjCA,WAAM,SAAC,wBAAwB;iDAC/BA,WAAM,SAAC,0BAA0B;iDACjCA,WAAM,SAAC,0BAA0B;mDACjCA,WAAM,SAAC,4BAA4B;;QAgItC,sBAAC;KA3ND;;;;;;ACXA;QAOA;SAMC;;oBANAK,aAAQ,SAAC;wBACR,OAAO,EAAE,CAAEC,mBAAY,CAAE;wBACzB,YAAY,EAAE,CAAE,eAAe,EAAE,eAAe,CAAE;wBAClD,OAAO,EAAE,CAAEA,mBAAY,EAAE,eAAe,EAAE,eAAe,CAAE;qBAC5D;;QAED,mBAAC;KAND;;;;;;;;;;;;;;;;"}