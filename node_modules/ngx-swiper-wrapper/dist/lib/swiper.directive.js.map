{"version":3,"file":"swiper.directive.js","sourceRoot":"","sources":["../../src/lib/swiper.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Swiper from 'swiper/dist/js/swiper.js';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Directive,\n  AfterViewInit, OnDestroy, DoCheck, OnChanges, Input, Output, EventEmitter,\n  SimpleChanges, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\n\nimport { SWIPER_CONFIG, SwiperConfig, SwiperConfigInterface,\n  SwiperEvent, SwiperEvents } from './swiper.interfaces';\n\n@Directive({\n  selector: '[swiper]',\n  exportAs: 'ngxSwiper'\n})\nexport class SwiperDirective implements AfterViewInit, OnDestroy, DoCheck, OnChanges {\n  private instance: any;\n\n  private initialIndex: number | null = null;\n\n  private configDiff: KeyValueDiffer<string, any> | null = null;\n\n  @Input()\n  set index(index: number) {\n    if (index != null) {\n      this.setIndex(index);\n    }\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Input() performance: boolean = false;\n\n  @Input('swiper') config?: SwiperConfigInterface;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object, private zone: NgZone,\n    private elementRef: ElementRef, private differs: KeyValueDiffers,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngAfterViewInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    const params = new SwiperConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    if (params.scrollbar === true) {\n      params.scrollbar = {\n        el: '.swiper-scrollbar'\n      };\n    }\n\n    if (params.pagination === true) {\n      params.pagination = {\n        el: '.swiper-pagination'\n      };\n    }\n\n    if (params.navigation === true) {\n      params.navigation = {\n        prevEl: '.swiper-button-prev',\n        nextEl: '.swiper-button-next'\n      };\n    }\n\n    if (this.disabled) {\n      params.allowSlidePrev = false;\n      params.allowSlideNext = false;\n    }\n\n    if (this.initialIndex != null) {\n      params.initialSlide = this.initialIndex;\n\n      this.initialIndex = null;\n    }\n\n    params.on = {\n      slideChange: () => {\n        if (this.instance && this.indexChange.observers.length) {\n          this.emit(this.indexChange, this.instance.realIndex);\n        }\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = new Swiper(this.elementRef.nativeElement, params);\n    });\n\n    if (params.init !== false && this.S_INIT.observers.length) {\n      this.emit(this.S_INIT, this.instance);\n    }\n\n    // Add native Swiper event handling\n    SwiperEvents.forEach((eventName: SwiperEvent) => {\n      let swiperEvent = eventName.replace('swiper', '');\n\n      swiperEvent = swiperEvent.charAt(0).toLowerCase() + swiperEvent.slice(1);\n\n      this.instance.on(swiperEvent, (...args: any[]) => {\n        if (args.length === 1) {\n          args = args[0];\n        }\n\n        const output = `S_${swiperEvent.toUpperCase()}`;\n\n        const emitter = this[output as keyof SwiperDirective] as EventEmitter<any>;\n\n        if (emitter.observers.length) {\n          this.emit(emitter, args);\n        }\n      });\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.destroy(true, this.instance.initialized || false);\n      });\n\n      this.instance = null;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes) {\n        this.initialIndex = this.getIndex(true);\n\n        this.ngOnDestroy();\n\n        this.ngAfterViewInit();\n\n        this.update();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.instance && changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        if (changes['disabled'].currentValue === true) {\n          this.zone.runOutsideAngular(() => {\n            this.ngOnDestroy();\n\n            this.ngAfterViewInit();\n          });\n        } else if (changes['disabled'].currentValue === false) {\n          this.zone.runOutsideAngular(() => {\n            this.ngOnDestroy();\n\n            this.ngAfterViewInit();\n          });\n        }\n      }\n    }\n  }\n\n  private emit(emitter: EventEmitter<any>, value: any): void {\n    if (this.performance) {\n      emitter.emit(value);\n    } else {\n      this.zone.run(() => emitter.emit(value));\n    }\n  }\n\n  public swiper(): any {\n    return this.instance;\n  }\n\n  public init(): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.init();\n      });\n    }\n  }\n\n  public update(): void {\n    setTimeout(() => {\n      if (this.instance) {\n        this.zone.runOutsideAngular(() => {\n          this.instance.update();\n        });\n      }\n    }, 0);\n  }\n\n  public getIndex(real?: boolean): number {\n    if (!this.instance) {\n      return this.initialIndex || 0;\n    } else {\n      return real ? this.instance.realIndex : this.instance.activeIndex;\n    }\n  }\n\n  public setIndex(index: number, speed?: number, silent?: boolean): void {\n    if (!this.instance) {\n      this.initialIndex = index;\n    } else {\n      let realIndex = index * this.instance.params.slidesPerGroup;\n\n      if (this.instance.params.loop) {\n        realIndex += this.instance.loopedSlides;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideTo(realIndex, speed, !silent);\n      });\n    }\n  }\n\n  public prevSlide(speed?: number, silent?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slidePrev(speed, !silent);\n      });\n    }\n  }\n\n  public nextSlide(speed?: number, silent?: boolean): void {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideNext(speed, !silent);\n      });\n    }\n  }\n\n  public stopAutoplay(reset?: boolean): void {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.stop();\n      });\n    }\n  }\n\n  public startAutoplay(reset?: boolean): void {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.start();\n      });\n    }\n  }\n}\n"]}