{"version":3,"file":"swiper.component.js","sourceRoot":"","sources":["../../src/lib/swiper.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NgZone, Inject, Optional, ElementRef, Component,\n  AfterViewInit, OnDestroy, Input, Output, EventEmitter,\n  ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\n\nimport { SwiperDirective } from './swiper.directive';\n\nimport { SWIPER_CONFIG, SwiperConfig, SwiperConfigInterface,\n  SwiperEvent, SwiperEvents } from './swiper.interfaces';\n\n@Component({\n  selector: 'swiper',\n  exportAs: 'ngxSwiper',\n  templateUrl: '../../dist/lib/swiper.component.html',\n  styleUrls: [\n    '../../dist/lib/swiper.component.css',\n    '../../node_modules/swiper/dist/css/swiper.min.css'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SwiperComponent implements AfterViewInit, OnDestroy {\n  private mo: MutationObserver | null = null;\n\n  public swiperConfig: any = null;\n  public paginationBackup: any = null;\n  public paginationConfig: any = null;\n\n  @Input() index: number | null = null;\n\n  @Input() disabled: boolean = false;\n\n  @Input() performance: boolean = false;\n\n  @Input() config?: SwiperConfigInterface;\n\n  @Input() useSwiperClass: boolean = true;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @ViewChild('swiperSlides') swiperSlides?: ElementRef;\n\n  @ViewChild(SwiperDirective) directiveRef?: SwiperDirective;\n\n  get isAtLast(): boolean {\n    return (!this.directiveRef || !this.directiveRef.swiper()) ?\n      false : this.directiveRef.swiper()['isEnd'];\n  }\n\n  get isAtFirst(): boolean {\n    return (!this.directiveRef || !this.directiveRef.swiper()) ?\n      false : this.directiveRef.swiper()['isBeginning'];\n  }\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngAfterViewInit(): void {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    this.zone.runOutsideAngular(() => {\n      this.updateClasses();\n\n      if (this.swiperSlides && typeof MutationObserver !== 'undefined') {\n        this.mo = new MutationObserver(() => {\n          this.updateClasses();\n        });\n\n        this.mo.observe(this.swiperSlides.nativeElement, { childList: true });\n      }\n    });\n\n    window.setTimeout(() => {\n      if (this.directiveRef) {\n        this.S_INIT.emit();\n\n        this.directiveRef.indexChange = this.indexChange;\n\n        SwiperEvents.forEach((eventName: SwiperEvent) => {\n          if (this.directiveRef) {\n            const output = `S_${eventName.replace('swiper', '').toUpperCase()}`;\n\n            const directiveOutput = output as keyof SwiperDirective;\n            const componentOutput = output as keyof SwiperComponent;\n\n            this.directiveRef[directiveOutput] = this[componentOutput] as EventEmitter<any>;\n          }\n        });\n      }\n    }, 0);\n  }\n\n  ngOnDestroy(): void {\n    if (this.mo) {\n      this.mo.disconnect();\n    }\n\n    if (this.config && this.paginationBackup) {\n      this.config.pagination = this.paginationBackup;\n    }\n  }\n\n  public getConfig(): SwiperConfigInterface {\n    this.swiperConfig = new SwiperConfig(this.defaults);\n\n    this.swiperConfig.assign(this.config); // Custom configuration\n\n    if (this.swiperConfig.pagination === true ||\n       (this.swiperConfig.pagination && typeof this.swiperConfig.pagination === 'object' &&\n       (!this.swiperConfig.pagination.type || this.swiperConfig.pagination.type === 'bullets') &&\n       !this.swiperConfig.pagination.renderBullet && this.swiperConfig.pagination.el === '.swiper-pagination'))\n    {\n      this.config = this.config || {};\n\n      if (!this.paginationConfig) {\n        this.paginationBackup = this.config.pagination;\n\n        this.paginationConfig = {\n          el: '.swiper-pagination',\n\n          renderBullet: (index: number, className: string) => {\n            const children = this.swiperSlides ? this.swiperSlides.nativeElement.children : [];\n\n            let bullet = `<span class=\"${className} ${className}-middle\" index=\"${index}\"></span>`;\n\n            if (index === 0) {\n              bullet = `<span class=\"${className} ${className}-first\" index=\"${index}\"></span>`;\n            } else if (index === (children.length - 1)) {\n              bullet = `<span class=\"${className} ${className}-last\" index=\"${index}\"></span>`;\n            }\n\n            return `<span class=\"swiper-pagination-handle\" index=\"${index}\">${bullet}</span>`;\n          }\n        };\n      }\n\n      if (this.swiperConfig.pagination === true) {\n        this.config.pagination = this.paginationConfig;\n      } else {\n        this.config.pagination = Object.assign({} , this.config.pagination, this.paginationConfig);\n      }\n    }\n\n    return this.config as SwiperConfigInterface;\n  }\n\n  private updateClasses(): void {\n    if (this.swiperSlides) {\n      let updateNeeded = false;\n\n      const children = this.swiperSlides.nativeElement.children;\n\n      for (let i = 0; i < children.length; i++) {\n        if (!children[i].classList.contains('swiper-slide')) {\n          updateNeeded = true;\n\n          children[i].classList.add('swiper-slide');\n        }\n      }\n\n      if (updateNeeded && this.directiveRef) {\n        this.directiveRef.update();\n      }\n    }\n\n    this.cdRef.detectChanges();\n  }\n\n  public onPaginationClick(index: number): void {\n    if (this.config && this.directiveRef && (this.config.pagination === true ||\n       (this.config.pagination && typeof this.config.pagination === 'object' &&\n       (!this.config.pagination.type || this.config.pagination.type === 'bullets') &&\n       (this.config.pagination.clickable && this.config.pagination.el === '.swiper-pagination'))))\n    {\n      this.directiveRef.setIndex(index);\n    }\n  }\n}\n"]}