var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@nguniversal/express-engine/schematics/install/utils", ["require", "exports", "@angular-devkit/schematics", "typescript", "@schematics/angular/utility/ast-utils"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    var schematics_1 = require("@angular-devkit/schematics");
    var ts = require("typescript");
    var ast_utils_1 = require("@schematics/angular/utility/ast-utils");
    function findAppServerModuleExport(host, mainPath) {
        var e_1, _a;
        var mainBuffer = host.read(mainPath);
        if (!mainBuffer) {
            throw new schematics_1.SchematicsException("Main file (" + mainPath + ") not found");
        }
        var mainText = mainBuffer.toString('utf-8');
        var source = ts.createSourceFile(mainPath, mainText, ts.ScriptTarget.Latest, true);
        var allNodes = ast_utils_1.getSourceNodes(source);
        var exportDeclaration = null;
        try {
            for (var allNodes_1 = __values(allNodes), allNodes_1_1 = allNodes_1.next(); !allNodes_1_1.done; allNodes_1_1 = allNodes_1.next()) {
                var node = allNodes_1_1.value;
                var exportDeclarationNode = node;
                // Walk up the parent until ExportDeclaration is found.
                while (exportDeclarationNode && exportDeclarationNode.parent
                    && exportDeclarationNode.parent.kind !== ts.SyntaxKind.ExportDeclaration) {
                    exportDeclarationNode = exportDeclarationNode.parent;
                }
                if (exportDeclarationNode !== null &&
                    exportDeclarationNode.parent !== undefined &&
                    exportDeclarationNode.parent.kind === ts.SyntaxKind.ExportDeclaration) {
                    exportDeclaration = exportDeclarationNode.parent;
                    break;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (allNodes_1_1 && !allNodes_1_1.done && (_a = allNodes_1.return)) _a.call(allNodes_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return exportDeclaration;
    }
    exports.findAppServerModuleExport = findAppServerModuleExport;
    function findAppServerModulePath(host, mainPath) {
        var exportDeclaration = findAppServerModuleExport(host, mainPath);
        if (!exportDeclaration) {
            throw new schematics_1.SchematicsException('Could not find app server module export');
        }
        var moduleSpecifier = exportDeclaration.moduleSpecifier.getText();
        return moduleSpecifier.substring(1, moduleSpecifier.length - 1);
    }
    exports.findAppServerModulePath = findAppServerModulePath;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vIiwic291cmNlcyI6WyJtb2R1bGVzL2V4cHJlc3MtZW5naW5lL3NjaGVtYXRpY3MvaW5zdGFsbC91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFBQTs7Ozs7O09BTUc7SUFDSCx5REFBdUU7SUFDdkUsK0JBQWlDO0lBQ2pDLG1FQUFxRTtJQUVyRSxTQUFnQix5QkFBeUIsQ0FBQyxJQUFVLEVBQ1YsUUFBZ0I7O1FBQ3hELElBQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNmLE1BQU0sSUFBSSxnQ0FBbUIsQ0FBQyxnQkFBYyxRQUFRLGdCQUFhLENBQUMsQ0FBQztTQUNwRTtRQUNELElBQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUMsSUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFckYsSUFBTSxRQUFRLEdBQUcsMEJBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV4QyxJQUFJLGlCQUFpQixHQUFnQyxJQUFJLENBQUM7O1lBRTFELEtBQW1CLElBQUEsYUFBQSxTQUFBLFFBQVEsQ0FBQSxrQ0FBQSx3REFBRTtnQkFBeEIsSUFBTSxJQUFJLHFCQUFBO2dCQUViLElBQUkscUJBQXFCLEdBQW1CLElBQUksQ0FBQztnQkFFakQsdURBQXVEO2dCQUN2RCxPQUFPLHFCQUFxQixJQUFJLHFCQUFxQixDQUFDLE1BQU07dUJBQ3pELHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsRUFBRTtvQkFDeEUscUJBQXFCLEdBQUcscUJBQXFCLENBQUMsTUFBTSxDQUFDO2lCQUN0RDtnQkFFRCxJQUFJLHFCQUFxQixLQUFLLElBQUk7b0JBQ2hDLHFCQUFxQixDQUFDLE1BQU0sS0FBSyxTQUFTO29CQUMxQyxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLEVBQUUsQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUU7b0JBQ3ZFLGlCQUFpQixHQUFHLHFCQUFxQixDQUFDLE1BQThCLENBQUM7b0JBQ3pFLE1BQU07aUJBQ1A7YUFDRjs7Ozs7Ozs7O1FBRUQsT0FBTyxpQkFBaUIsQ0FBQztJQUMzQixDQUFDO0lBaENELDhEQWdDQztJQUVELFNBQWdCLHVCQUF1QixDQUFDLElBQVUsRUFBRSxRQUFnQjtRQUNsRSxJQUFNLGlCQUFpQixHQUFHLHlCQUF5QixDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDdEIsTUFBTSxJQUFJLGdDQUFtQixDQUFDLHlDQUF5QyxDQUFDLENBQUM7U0FDMUU7UUFFRCxJQUFNLGVBQWUsR0FBRyxpQkFBaUIsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDcEUsT0FBTyxlQUFlLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFSRCwwREFRQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgU2NoZW1hdGljc0V4Y2VwdGlvbiwgVHJlZSB9IGZyb20gJ0Bhbmd1bGFyLWRldmtpdC9zY2hlbWF0aWNzJztcbmltcG9ydCAqIGFzIHRzIGZyb20gJ3R5cGVzY3JpcHQnO1xuaW1wb3J0IHtnZXRTb3VyY2VOb2Rlc30gZnJvbSAnQHNjaGVtYXRpY3MvYW5ndWxhci91dGlsaXR5L2FzdC11dGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaW5kQXBwU2VydmVyTW9kdWxlRXhwb3J0KGhvc3Q6IFRyZWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYWluUGF0aDogc3RyaW5nKTogdHMuRXhwb3J0RGVjbGFyYXRpb24gfCBudWxsIHtcbiAgY29uc3QgbWFpbkJ1ZmZlciA9IGhvc3QucmVhZChtYWluUGF0aCk7XG4gIGlmICghbWFpbkJ1ZmZlcikge1xuICAgIHRocm93IG5ldyBTY2hlbWF0aWNzRXhjZXB0aW9uKGBNYWluIGZpbGUgKCR7bWFpblBhdGh9KSBub3QgZm91bmRgKTtcbiAgfVxuICBjb25zdCBtYWluVGV4dCA9IG1haW5CdWZmZXIudG9TdHJpbmcoJ3V0Zi04Jyk7XG4gIGNvbnN0IHNvdXJjZSA9IHRzLmNyZWF0ZVNvdXJjZUZpbGUobWFpblBhdGgsIG1haW5UZXh0LCB0cy5TY3JpcHRUYXJnZXQuTGF0ZXN0LCB0cnVlKTtcblxuICBjb25zdCBhbGxOb2RlcyA9IGdldFNvdXJjZU5vZGVzKHNvdXJjZSk7XG5cbiAgbGV0IGV4cG9ydERlY2xhcmF0aW9uOiB0cy5FeHBvcnREZWNsYXJhdGlvbiB8IG51bGwgPSBudWxsO1xuXG4gIGZvciAoY29uc3Qgbm9kZSBvZiBhbGxOb2Rlcykge1xuXG4gICAgbGV0IGV4cG9ydERlY2xhcmF0aW9uTm9kZTogdHMuTm9kZSB8IG51bGwgPSBub2RlO1xuXG4gICAgLy8gV2FsayB1cCB0aGUgcGFyZW50IHVudGlsIEV4cG9ydERlY2xhcmF0aW9uIGlzIGZvdW5kLlxuICAgIHdoaWxlIChleHBvcnREZWNsYXJhdGlvbk5vZGUgJiYgZXhwb3J0RGVjbGFyYXRpb25Ob2RlLnBhcmVudFxuICAgICYmIGV4cG9ydERlY2xhcmF0aW9uTm9kZS5wYXJlbnQua2luZCAhPT0gdHMuU3ludGF4S2luZC5FeHBvcnREZWNsYXJhdGlvbikge1xuICAgICAgZXhwb3J0RGVjbGFyYXRpb25Ob2RlID0gZXhwb3J0RGVjbGFyYXRpb25Ob2RlLnBhcmVudDtcbiAgICB9XG5cbiAgICBpZiAoZXhwb3J0RGVjbGFyYXRpb25Ob2RlICE9PSBudWxsICYmXG4gICAgICBleHBvcnREZWNsYXJhdGlvbk5vZGUucGFyZW50ICE9PSB1bmRlZmluZWQgJiZcbiAgICAgIGV4cG9ydERlY2xhcmF0aW9uTm9kZS5wYXJlbnQua2luZCA9PT0gdHMuU3ludGF4S2luZC5FeHBvcnREZWNsYXJhdGlvbikge1xuICAgICAgZXhwb3J0RGVjbGFyYXRpb24gPSBleHBvcnREZWNsYXJhdGlvbk5vZGUucGFyZW50IGFzIHRzLkV4cG9ydERlY2xhcmF0aW9uO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGV4cG9ydERlY2xhcmF0aW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZEFwcFNlcnZlck1vZHVsZVBhdGgoaG9zdDogVHJlZSwgbWFpblBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGV4cG9ydERlY2xhcmF0aW9uID0gZmluZEFwcFNlcnZlck1vZHVsZUV4cG9ydChob3N0LCBtYWluUGF0aCk7XG4gIGlmICghZXhwb3J0RGVjbGFyYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgU2NoZW1hdGljc0V4Y2VwdGlvbignQ291bGQgbm90IGZpbmQgYXBwIHNlcnZlciBtb2R1bGUgZXhwb3J0Jyk7XG4gIH1cblxuICBjb25zdCBtb2R1bGVTcGVjaWZpZXIgPSBleHBvcnREZWNsYXJhdGlvbi5tb2R1bGVTcGVjaWZpZXIuZ2V0VGV4dCgpO1xuICByZXR1cm4gbW9kdWxlU3BlY2lmaWVyLnN1YnN0cmluZygxLCBtb2R1bGVTcGVjaWZpZXIubGVuZ3RoIC0gMSk7XG59XG4iXX0=